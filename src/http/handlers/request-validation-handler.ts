// This file was generated by liblab | https://liblab.com/

import { ContentType, HttpRequest, HttpResponse, RequestHandler } from '../types';
import { HttpError } from '../error';

export class RequestValidationHandler implements RequestHandler {
  next?: RequestHandler;

  async handle<T>(request: HttpRequest<T>): Promise<HttpResponse<T>> {
    if (!this.next) {
      throw new Error('No next handler set in ContentTypeHandler.');
    }

    if (request.requestContentType === ContentType.Json) {
      request.body = JSON.stringify(request.requestSchema.parse(request.body));
    } else {
      request.body = JSON.stringify(request.requestSchema.parse(request.body));
    }

    return await this.next.handle(request);
  }
}
